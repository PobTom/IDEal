booleanExpressionComplexity=布尔表达式复杂度： {0,number,integer} （最多： {1,number,integer} ）。
classDataAbstractionCoupling=类数据的抽象耦合： {0,number,integer} （最多： {1,number,integer}），引用类： {2}。
classFanOutComplexity=类的分散复杂度： {0,number,integer} （最多： {1,number,integer}）。
cyclomaticComplexity=圈复杂度： {0,number,integer} （最多： {1,number,integer} ）。
duplicateLiteral=字符串常量 ''{0}'' 不应出现两次。
finalField=''{0}'' 应声明为 final 的。
illegalAbstractClassName=抽象类名 ''{0}'' 不匹配： ''{1}'' 。
illegalCatch=不应捕获： ''{0}'' 。
illegalThrows=不应抛出： ''{0}''  。
illegalToken=不应使用： ''{0}'' 。
illegalType=不应声明 ''{0}'' 类型的引用、返回值或参数名。
junit.methodName=方法 ''{0}'' 应命名为： ''{1}'' 。
junit.methodParameters=方法 ''{0}'' 不应有参数。
junit.methodPublicAndStatic=方法 ''{0}'' 必须声明为 static 的。
junit.methodPublicOrProtected=方法 {0} 必须声明为 public 或 protected 的。
junit.methodReturnType=方法 ''{0}'' 返回值必须声明为 void 。
mutableException=''{0}'' 应声明为 final 的。
nestedIfDepth=内嵌 if 深度： {0,number,integer} （最多： {1,number,integer} ）。
nestedTryDepth=内嵌 try 深度： {0,number,integer} （最多： {1,number,integer} ）。
npathComplexity=方法分支复杂度： {0,number,integer} （最多： {1,number,integer} ）。
packageDeclaration=缺少包声明。
parameterAssignment=不应对参数 ''{0}'' 赋值。
returnCount=Return 总数 {0,number,integer}个（最多： {1,number,integer}个）。
returnFromCatch=catch 块中不应有 return 。
returnFromFinally=finally 块中不应有 return 。
throwsCount=Throws 总数 {0,number,integer} 个（最多： {1,number,integer} 个）。
unusedVariable=变量 ''{0}'' 从未被使用。
ncss.method=方法代码行数（不含注释）为：{0,number,integer} （最多：{1,number,integer} 行）。
ncss.class=类代码行数（不含注释）为：{0,number,integer} （最多：{1,number,integer} 行）。
ncss.file=文件代码行数（不含注释）为：{0,number,integer} （最多：{1,number,integer} 行）。
